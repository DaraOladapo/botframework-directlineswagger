// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using ConsoleApplication2;
using ConsoleApplication2.Models;
using Microsoft.Rest;

namespace ConsoleApplication2
{
    public static partial class TokensExtensions
    {
        /// <param name='operations'>
        /// Reference to the ConsoleApplication2.ITokens.
        /// </param>
        public static Conversation GenerateTokenForNewConversation(this ITokens operations)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((ITokens)s).GenerateTokenForNewConversationAsync();
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <param name='operations'>
        /// Reference to the ConsoleApplication2.ITokens.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<Conversation> GenerateTokenForNewConversationAsync(this ITokens operations, CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Microsoft.Rest.HttpOperationResponse<ConsoleApplication2.Models.Conversation> result = await operations.GenerateTokenForNewConversationWithOperationResponseAsync(cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
        
        /// <param name='operations'>
        /// Reference to the ConsoleApplication2.ITokens.
        /// </param>
        public static Conversation RefreshToken(this ITokens operations)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((ITokens)s).RefreshTokenAsync();
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <param name='operations'>
        /// Reference to the ConsoleApplication2.ITokens.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<Conversation> RefreshTokenAsync(this ITokens operations, CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Microsoft.Rest.HttpOperationResponse<ConsoleApplication2.Models.Conversation> result = await operations.RefreshTokenWithOperationResponseAsync(cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
    }
}
