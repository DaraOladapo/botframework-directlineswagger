// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using ConsoleApplication2.Models;
using Microsoft.Rest;
using Newtonsoft.Json.Linq;

namespace ConsoleApplication2.Models
{
    public partial class ActivitySet
    {
        private IList<Activity> _activities;
        
        /// <summary>
        /// Optional. Activities
        /// </summary>
        public IList<Activity> Activities
        {
            get { return this._activities; }
            set { this._activities = value; }
        }
        
        private string _watermark;
        
        /// <summary>
        /// Optional. Maximum watermark of activities within this set
        /// </summary>
        public string Watermark
        {
            get { return this._watermark; }
            set { this._watermark = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the ActivitySet class.
        /// </summary>
        public ActivitySet()
        {
            this.Activities = new LazyList<Activity>();
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken activitiesSequence = ((JToken)inputObject["activities"]);
                if (activitiesSequence != null && activitiesSequence.Type != JTokenType.Null)
                {
                    foreach (JToken activitiesValue in ((JArray)activitiesSequence))
                    {
                        Activity activity = new Activity();
                        activity.DeserializeJson(activitiesValue);
                        this.Activities.Add(activity);
                    }
                }
                JToken watermarkValue = inputObject["watermark"];
                if (watermarkValue != null && watermarkValue.Type != JTokenType.Null)
                {
                    this.Watermark = ((string)watermarkValue);
                }
            }
        }
    }
}
