// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.IO;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using ConsoleApplication2.Models;
using Microsoft.Rest;

namespace ConsoleApplication2
{
    public partial interface IConversations
    {
        /// <param name='conversationId'>
        /// Required. Conversation ID
        /// </param>
        /// <param name='watermark'>
        /// Optional. (Optional) only returns activities newer than this
        /// watermark
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<ActivitySet>> GetActivitiesWithOperationResponseAsync(string conversationId, string watermark = null, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='conversationId'>
        /// Required. Conversation ID
        /// </param>
        /// <param name='activity'>
        /// Required. Activity to send
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<ResourceResponse>> PostActivityWithOperationResponseAsync(string conversationId, Activity activity, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='conversationId'>
        /// Required.
        /// </param>
        /// <param name='watermark'>
        /// Optional.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<Conversation>> ReconnectToConversationWithOperationResponseAsync(string conversationId, string watermark = null, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<Conversation>> StartConversationWithOperationResponseAsync(CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='conversationId'>
        /// Required.
        /// </param>
        /// <param name='file'>
        /// Required.
        /// </param>
        /// <param name='userId'>
        /// Optional.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<ResourceResponse>> UploadWithOperationResponseAsync(string conversationId, Stream file, string userId = null, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    }
}
